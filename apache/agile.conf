# There are 4 containers, all of which (except one) contain websites that expect incoming traffic over port 80.
# These containers cannot all listen on port 80, so therefore each has to have their internal 80 ports mapped to external
# ports that are unique to the container. This is where the rewriting comes in. It looks like this:
#
#    web browser:80 --> apache rewrite:[xxxx, ie 8080] --> container:[xxxx maps back to 80]
#

<LocationMatch "/(taiga)|(icescrum)|(agilefant)|(kunagi)">
   Satisfy Any
   Allow from all
</LocationMatch>

#<VirtualHost 10.57.237.86:80 10.57.237.86:443>

   <IfModule mod_rewrite.c>

      #ServerAdmin wrh@bu.edu
      #ServerName 10.57.237.86:80/taiga 
      #ServerAlias 10.57.237.86:80/taiga 
      #UseCanonicalName On
      #ServerPath "/taiga/"

      #SetEnvIf Request_URI "^/?((taiga)|(agilefant)|(icescrum)|(kunagi))" MYPATH=$1
      #Header set Host "10.57.237.86/${MYPATH}"
      Header set Host "10.57.237.86/taiga"
      Header set WARREN "I am testing"

      RewriteEngine on
      RewriteRule ^/+(icescrum.*)$     http://172.17.0.1:8080/$1 [P]
      RewriteRule ^/+(agilefant.*)$    http://172.17.0.1:8181/$1 [P]
      RewriteRule ^/+(taiga.*)$        http://172.17.0.1:8282/$1 [P]
      RewriteRule ^/+(kunagi.*)$       http://172.17.0.1:8383/$1 [P]
      
      ProxyRequests Off
      
      ProxyPass /icescrum http://172.17.0.1:8080/icescrum
      ProxyPassReverse /icescrum http://172.17.0.1:8080/icescrum
      
      ProxyPass /agilefant http://172.17.0.1:8181/agilefant
      ProxyPassReverse /agilefant http://172.17.0.1:8181/agilefant
      
      ProxyPass /taiga http://172.17.0.1:8282/taiga
      ProxyPassReverse /taiga http://172.17.0.1:8282/taiga
      
      ProxyPass /kunagi http://172.17.0.1:8383/kunagi
      ProxyPassReverse /kunagi http://172.17.0.1:8383/kunagi
      
      Options None
      
   </IfModule>

#</VirtualHost>